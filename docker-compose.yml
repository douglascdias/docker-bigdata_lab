version: "3.4"
services:
#HDFS
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    volumes:
      - ./data/hdfs/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "50070:50070"
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode
    volumes:
      - ./data/hdfs/datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075:50075"

#HIVE
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive_server
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive_metastore
    hostname: hive_metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive_metastore_postgresql
    volumes:
      - ./data/hive-metastore-postgresql/data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 500m

  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    env_file:
      - ./postgres.env
    ports:
      - "5433:5432"

#HUE
  hue:
    image: gethue/hue:latest
    hostname: hue
    container_name: hue
    ports:
      - "8888:8888"
    network_mode: "host"
    depends_on:
      - postgres
    volumes:
      - ./hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
    deploy:
      resources:
        limits:
          memory: 500m

#NOTEBOOK / SPARK
  spark-notebook:
    image: jupyter/all-spark-notebook
    container_name: spark-notebook
    depends_on:
      - namenode
      - datanode
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    env_file:
      - ./jupyter.env
    volumes:
      - ./data/spark/conf:/usr/local/spark/conf  
      - ./data/notebooks:/home/jovyan
      - ./data/dataset:/dataset
    ports:
      - 8889:8888
      - 4049:4040

#HBASE
  zoo:
    image: zookeeper:3.4.10
    container_name: zoo
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    ports:
      - 2181:2181

  hbase-master:
    image: bde2020/hbase-master:1.0.0-hbase1.2.6
    container_name: hbase-master
    hostname: hbase-master
    depends_on:
      - namenode
      - datanode
      - zoo
    env_file:
      - ./hbase-distributed-local.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zoo:2181"
    ports:
      - 16010:16010

  hbase-region:
    image: bde2020/hbase-regionserver:1.0.0-hbase1.2.6
    container_name: hbase-regionserver
    hostname: hbase-regionserver
    depends_on:
      - namenode
      - datanode
      - zoo
      - hbase-master
    env_file:
      - ./hbase-distributed-local.env
    environment:
      HBASE_CONF_hbase_regionserver_hostname: hbase-region
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 zoo:2181 hbase-master:16010"
    ports:
      - 16030:16030

volumes:
  shared_data: