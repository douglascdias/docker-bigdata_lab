["import java.io.File\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.hive.HiveContext\n\nval hiveContext = new HiveContext(sc)\nval warehouseLocation = \"hdfs://namenode:8020/user/hive/warehouse\"\nval data_base = \"db_nubank\"\nvar table = \"\"\nvar dir_path = warehouseLocation + \"/\" + data_base + \".db/\" + table\nvar db_table = data_base + \".\" + table\n\nspark.sql(\"use db_nubank\")", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        =< concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        =< concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        =< concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\ndf_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\ndf_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\n\"\"\"\n\n\nval df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\n\n\n\n\n\n\n\n\n\n\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\ndf_pix_client_geral.show(false)\n\n\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0                \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\norder by action_year,action_month\"\"\"\n\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\ndf_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\ndf_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\nval df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\ndf_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0\ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\ndf_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\ndf_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\nval df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\ndf_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\n// df_number_trans.show(false)\n// df_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0\ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\ndf_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\ndf_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\nval df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\ndf_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0\ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as stirng) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as string) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as stirng) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as string) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as stirng) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as string) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as string) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as string) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_value_trans.printShcema()\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_value_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_number_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,round(sum(case when amount > 0 then amount else 0 end),2) value_trans_in\n,round(sum(case when amount < 0 then amount else 0 end),2) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_number_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\ndf_value_trans.printSchema()\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as decimal(12,2)) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2 as decimal(12,2))) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_number_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\ndf_value_trans.printSchema()\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "// val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = t1.flag_is_pix\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 1                  \n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\n// from tmp_transfer_union_distinct t1\n// where not exists (select 1 \n//                   from tmp_transfer_union_distinct t2\n//                   where t2.account_id = t1.account_id \n//                   and t2.flag_is_pix = 1\n//                   and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n//                         <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n//                   )\n// and flag_is_pix = 0\n// group by t1.action_year,t1.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n// val sql_pix_client_geral = \"\"\"select \n// t1.*, t2. number_no_pix_transfer\n// from tmp_pix_client t1\n// inner join tmp_no_pix_client t2\n// on t1.action_year = t2.action_year\n// and t1.action_month = t2.action_month\n// order by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\n// val df_pix_client = spark.sql(sql_pix_client)\n// val df_no_pix_client = spark.sql(sql_no_pix_client)\n// df_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\n// df_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\n// val df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\n// df_pix_client.show(false)\n// df_no_pix_client.show(false)\n// df_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as decimal(12,2)) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as decimal(12,2)) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_number_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\ndf_value_trans.printSchema()\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "val sql_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_new_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = t1.flag_is_pix\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        < concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 1                  \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_no_pix_client = \"\"\"select t1.action_year,t1.action_month,count(1) number_no_pix_transfer\nfrom tmp_transfer_union_distinct t1\nwhere not exists (select 1 \n                  from tmp_transfer_union_distinct t2\n                  where t2.account_id = t1.account_id \n                  and t2.flag_is_pix = 1\n                  and concat(cast(t2.action_year as string),lpad(cast(t2.action_month as string),2,'0'))  \n                        <= concat(cast(t1.action_year as string),lpad(cast(t1.action_month as string),2,'0')) \n                  )\nand flag_is_pix = 0\ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\nval sql_pix_client_geral = \"\"\"select \nt1.*, t2. number_no_pix_transfer\nfrom tmp_pix_client t1\ninner join tmp_no_pix_client t2\non t1.action_year = t2.action_year\nand t1.action_month = t2.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n\n\nval df_pix_client = spark.sql(sql_pix_client)\nval df_no_pix_client = spark.sql(sql_no_pix_client)\ndf_pix_client.createOrReplaceTempView(\"tmp_pix_client\")\ndf_no_pix_client.createOrReplaceTempView(\"tmp_no_pix_client\")\n\nval df_pix_client_geral = spark.sql(sql_pix_client_geral)\n\ndf_pix_client.show(false)\ndf_no_pix_client.show(false)\ndf_pix_client_geral.show(false)\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nval sql_number_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,count(1) number_trans \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval sql_value_trans = \"\"\"select action_year\n,action_month\n,flag_is_pix\n,cast(round(sum(case when amount > 0 then amount else 0 end),2) as decimal(12,2)) value_trans_in\n,cast(round(sum(case when amount < 0 then amount else 0 end),2) as decimal(12,2)) value_trans_out \nfrom  transfer_union\ngroup by action_year,action_month,flag_is_pix\norder by action_year,action_month\"\"\"\n\nval df_number_trans = spark.sql(sql_number_trans)\ndf_number_trans.printSchema()\nval df_value_trans = spark.sql(sql_value_trans)\ndf_value_trans.printSchema()\n\ndf_number_trans.show(false)\ndf_value_trans.show(false)", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\ndf_transfer_union_distinct.count()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\"\"\").show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,flag_is_pix,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month,t1.flag_is_pix\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select distinct t1.action_year,t1.action_month,count(1)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(t1.action_year,t1.action_month)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(distinct t1.action_year,t1.action_month)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(distinct account_id,t1.action_year,t1.action_month)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()", "val df_transfer_union = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"file:///dataset/nubank/out_transfer_union/part-00000-5bfcdad5-e389-4763-abd1-4439eb7b3d71-c000.csv\")\ndf_transfer_union.createOrReplaceTempView(\"tmp_transfer_union\")\ndf_transfer_union.printSchema()\n\n// val df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\").where($\"flag_is_pix\" === 1).distinct()\nval df_transfer_union_distinct = df_transfer_union.select(\"account_id\",\"action_month\",\"action_year\",\"flag_is_pix\").distinct()\ndf_transfer_union_distinct.createOrReplaceTempView(\"tmp_transfer_union_distinct\")\ndf_transfer_union_distinct.printSchema()\nspark.sql(\"\"\"select t1.action_year,t1.action_month,count(distinct account_id)  \nfrom tmp_transfer_union_distinct t1 \ngroup by t1.action_year,t1.action_month\norder by cast(t1.action_year as int),cast(t1.action_month as int)\"\"\"\n         ).show()"]